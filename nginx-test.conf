#user  nobody;

worker_processes  4;
pid     logs/nginx.pid;

error_log  logs/error.log info;

events {
    worker_connections  1024;
}

http {

    # skywalking lua配置相关
    lua_package_path "/usr/local/openresty/lualib/?.lua;;";
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;";
    lua_shared_dict skywalking_dict 100k;
    init_worker_by_lua_file /Volumes/MyDisk/workspace/openresty/nginx-skywalking-plugin/src/skywalking_upstream_test.lua;

    upstream backend {
        server 127.0.0.1:8081;
    }

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    #keepalive_timeout  0;
    #keepalive_timeout  65;

    #gzip  on;

    server {
       #lua_code_cache off;

        listen       80;
        server_name  localhost;

        access_log  logs/access.log  main;

        # skywalking lua配置相关
        set $skywalking_trace_id '';

        location / {
            #rewrite_by_lua_file src/skywalking_header.lua;

            rewrite_by_lua_block {
                ngx.log(ngx.INFO,"a1");
            }
            access_by_lua_block {
                ngx.log(ngx.INFO,"a2");
            }
            content_by_lua_block {
                ngx.log(ngx.INFO,"a3");
            }
            header_filter_by_lua_block {
                ngx.log(ngx.INFO,"a4");
            }
            body_filter_by_lua_block {
                ngx.log(ngx.INFO,"a5");
            }
        }

        location /proxy/a {
            #header_filter_by_lua_file src/skywalking_upstream.lua;
            #content_by_lua_file src/skywalking_content.lua;


            rewrite_by_lua_block {
                ngx.log(ngx.INFO,"b1  "..ngx.get_phase());
                ngx.req.set_header("sw3","xxxxxxxxxxxxxxxxxxxxxxx")
            }
            access_by_lua_block {
                ngx.log(ngx.INFO,"b2  "..ngx.get_phase());
                ngx.req.set_header("sw4","yyyyyyyyyyyyyyyy")

            }
            content_by_lua_block {
                ngx.log(ngx.INFO,"b3  "..ngx.get_phase());
            }
            header_filter_by_lua_block {
                ngx.log(ngx.INFO,"b4  "..ngx.get_phase());
                ngx.header.content_length=nil
            }
            body_filter_by_lua_block {

                ngx.header.content_length=nil

                local x = require("skywalking5.base.print")
                ngx.log(ngx.INFO,"b5  "..ngx.get_phase())

                local data, eof = ngx.arg[1], ngx.arg[2]
                ngx.log(ngx.INFO,"data="..data)

                x:print(ngx.arg[2])

                ngx.arg[1] = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb"
                ngx.arg[1] = string.upper(ngx.arg[1])
                ngx.arg[2] = true

            }

            proxy_pass http://backend/a;
            proxy_pass_header Date;
            proxy_pass_header Server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

      location /test/debug {
        default_type 'text/html';
        charset utf-8;
        content_by_lua_file src/location/helloworld.lua;
      }

      location /nginx/status {
        stub_status on;
        access_log on;
        auth_basic "NginxStatus";
        #auth_basic_user_file conf/htpasswd;
      }

    }
}
